# .github/workflows/gitleaks.yml in your centralized repo
name: Gitleaks Secret Scanning

on:
  workflow_call:
    inputs:
      config-path:
        required: false
        type: string
        default: '.gitleaks.toml'
      gitleaks-flags:
        required: false
        type: string
        default: ''
      scan-mode:
        required: false
        type: string
        default: 'latest-commit'
    secrets:
      GITLEAKS_LICENSE:
        required: false

jobs:
  gitleaks:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for config file
        id: config-check
        run: |
          if [ -f "${{ inputs.config-path }}" ]; then
            echo "found=true" >> $GITHUB_OUTPUT
            echo "Using calling repository's .gitleaks.toml"
          else
            echo "found=false" >> $GITHUB_OUTPUT
            echo "No .gitleaks.toml found - using Gitleaks defaults"
          fi

      - name: Run gitleaks
        run: |
          # Determine scan range
          if [ "${{ inputs.scan-mode }}" = "latest-commit" ]; then
            LOG_OPTS="--log-opts=${{ github.sha }}^..${{ github.sha }}"
          else
            LOG_OPTS=""
          fi

          # Set config flag if file exists
          if [ "${{ steps.config-check.outputs.found }}" = "true" ]; then
            CONFIG_FLAG="--config=/repo/${{ inputs.config-path }}"
          else
            CONFIG_FLAG=""
          fi

          docker run --rm \
            -v "${{ github.workspace }}:/repo" \
            -e GITLEAKS_LICENSE_KEY="${{ secrets.GITLEAKS_LICENSE }}" \
            zricethezav/gitleaks:v8.18.4@sha256:75bdb2b2f4db213cde0b8295f13a88d6b333091bbfbf3012a4e083d00d31caba \
            detect \
            --source="/repo" \
            ${LOG_OPTS} \
            ${CONFIG_FLAG} \
            --verbose \
            --redact \
            --ignore-gitleaks-allow \
            --exit-code 1 \
            ${{ inputs.gitleaks-flags }}
